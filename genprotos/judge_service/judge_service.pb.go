// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: judge_service_protos/judge_service.proto

package judge_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An enumeration for supported programming languages.
type Language int32

const (
	Language_LANGUAGE_UNSPECIFIED Language = 0
	Language_PYTHON               Language = 1
	Language_CPP                  Language = 2
	Language_JAVASCRIPT           Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANGUAGE_UNSPECIFIED",
		1: "PYTHON",
		2: "CPP",
		3: "JAVASCRIPT",
	}
	Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"PYTHON":               1,
		"CPP":                  2,
		"JAVASCRIPT":           3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_judge_service_protos_judge_service_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_judge_service_protos_judge_service_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{0}
}

// An enumeration for all possible test case/submission statuses.
type VerdictStatus int32

const (
	VerdictStatus_VERDICT_UNSPECIFIED   VerdictStatus = 0
	VerdictStatus_ACCEPTED              VerdictStatus = 1
	VerdictStatus_WRONG_ANSWER          VerdictStatus = 2
	VerdictStatus_TIME_LIMIT_EXCEEDED   VerdictStatus = 3
	VerdictStatus_MEMORY_LIMIT_EXCEEDED VerdictStatus = 4
	VerdictStatus_RUNTIME_ERROR         VerdictStatus = 5
	VerdictStatus_COMPILATION_ERROR     VerdictStatus = 6
	VerdictStatus_INTERNAL_ERROR        VerdictStatus = 7
)

// Enum value maps for VerdictStatus.
var (
	VerdictStatus_name = map[int32]string{
		0: "VERDICT_UNSPECIFIED",
		1: "ACCEPTED",
		2: "WRONG_ANSWER",
		3: "TIME_LIMIT_EXCEEDED",
		4: "MEMORY_LIMIT_EXCEEDED",
		5: "RUNTIME_ERROR",
		6: "COMPILATION_ERROR",
		7: "INTERNAL_ERROR",
	}
	VerdictStatus_value = map[string]int32{
		"VERDICT_UNSPECIFIED":   0,
		"ACCEPTED":              1,
		"WRONG_ANSWER":          2,
		"TIME_LIMIT_EXCEEDED":   3,
		"MEMORY_LIMIT_EXCEEDED": 4,
		"RUNTIME_ERROR":         5,
		"COMPILATION_ERROR":     6,
		"INTERNAL_ERROR":        7,
	}
)

func (x VerdictStatus) Enum() *VerdictStatus {
	p := new(VerdictStatus)
	*p = x
	return p
}

func (x VerdictStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerdictStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_judge_service_protos_judge_service_proto_enumTypes[1].Descriptor()
}

func (VerdictStatus) Type() protoreflect.EnumType {
	return &file_judge_service_protos_judge_service_proto_enumTypes[1]
}

func (x VerdictStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerdictStatus.Descriptor instead.
func (VerdictStatus) EnumDescriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{1}
}

type CompilationUpdate_Status int32

const (
	CompilationUpdate_STATUS_UNSPECIFIED CompilationUpdate_Status = 0
	CompilationUpdate_PENDING            CompilationUpdate_Status = 1
	CompilationUpdate_COMPILING          CompilationUpdate_Status = 2
	CompilationUpdate_SUCCESS            CompilationUpdate_Status = 3
	CompilationUpdate_FAILED             CompilationUpdate_Status = 4
)

// Enum value maps for CompilationUpdate_Status.
var (
	CompilationUpdate_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PENDING",
		2: "COMPILING",
		3: "SUCCESS",
		4: "FAILED",
	}
	CompilationUpdate_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PENDING":            1,
		"COMPILING":          2,
		"SUCCESS":            3,
		"FAILED":             4,
	}
)

func (x CompilationUpdate_Status) Enum() *CompilationUpdate_Status {
	p := new(CompilationUpdate_Status)
	*p = x
	return p
}

func (x CompilationUpdate_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompilationUpdate_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_judge_service_protos_judge_service_proto_enumTypes[2].Descriptor()
}

func (CompilationUpdate_Status) Type() protoreflect.EnumType {
	return &file_judge_service_protos_judge_service_proto_enumTypes[2]
}

func (x CompilationUpdate_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompilationUpdate_Status.Descriptor instead.
func (CompilationUpdate_Status) EnumDescriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{10, 0}
}

// A Problem contains the description, limits, and everything needed to judge a solution.
type Problem struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // Unique identifier (e.g., UUID).
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             // Problem title, e.g., "Sum of Two Numbers".
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Full problem description in Markdown/HTML.
	// A map where the key is the language (e.g., "python", "cpp") and the value
	// is the harness/scaffold code for that language.
	LanguageHarnesses map[string]string `protobuf:"bytes,4,rep,name=language_harnesses,json=languageHarnesses,proto3" json:"language_harnesses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Limits            *ResourceLimits   `protobuf:"bytes,5,opt,name=limits,proto3" json:"limits,omitempty"`                        // Time and memory limits for this problem.
	TestCases         []*TestCase       `protobuf:"bytes,6,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"` // List of test cases.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Problem) Reset() {
	*x = Problem{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{0}
}

func (x *Problem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Problem) GetLanguageHarnesses() map[string]string {
	if x != nil {
		return x.LanguageHarnesses
	}
	return nil
}

func (x *Problem) GetLimits() *ResourceLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *Problem) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

// Defines the resource constraints for a submission.
type ResourceLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeLimitMs   int32                  `protobuf:"varint,1,opt,name=time_limit_ms,json=timeLimitMs,proto3" json:"time_limit_ms,omitempty"`       // Time limit in milliseconds.
	MemoryLimitMb int32                  `protobuf:"varint,2,opt,name=memory_limit_mb,json=memoryLimitMb,proto3" json:"memory_limit_mb,omitempty"` // Memory limit in megabytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceLimits) GetTimeLimitMs() int32 {
	if x != nil {
		return x.TimeLimitMs
	}
	return 0
}

func (x *ResourceLimits) GetMemoryLimitMb() int32 {
	if x != nil {
		return x.MemoryLimitMb
	}
	return 0
}

// Represents a single test case with input and expected output.
type TestCase struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Input          string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`                                         // The input data to be piped into the program's stdin.
	ExpectedOutput string                 `protobuf:"bytes,2,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"` // The exact expected output from the program's stdout.
	IsHidden       bool                   `protobuf:"varint,3,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`                  // If true, the input/output is not shown to the user on failure.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{2}
}

func (x *TestCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TestCase) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

func (x *TestCase) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

type CreateProblemRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Title             string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description       string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	LanguageHarnesses map[string]string      `protobuf:"bytes,3,rep,name=language_harnesses,json=languageHarnesses,proto3" json:"language_harnesses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Limits            *ResourceLimits        `protobuf:"bytes,4,opt,name=limits,proto3" json:"limits,omitempty"`
	TestCases         []*TestCase            `protobuf:"bytes,5,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateProblemRequest) Reset() {
	*x = CreateProblemRequest{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemRequest) ProtoMessage() {}

func (x *CreateProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemRequest.ProtoReflect.Descriptor instead.
func (*CreateProblemRequest) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateProblemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProblemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProblemRequest) GetLanguageHarnesses() map[string]string {
	if x != nil {
		return x.LanguageHarnesses
	}
	return nil
}

func (x *CreateProblemRequest) GetLimits() *ResourceLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *CreateProblemRequest) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type GetProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemRequest) Reset() {
	*x = GetProblemRequest{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemRequest) ProtoMessage() {}

func (x *GetProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemRequest.ProtoReflect.Descriptor instead.
func (*GetProblemRequest) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetProblemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Problem       *Problem               `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemRequest) Reset() {
	*x = UpdateProblemRequest{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemRequest) ProtoMessage() {}

func (x *UpdateProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemRequest.ProtoReflect.Descriptor instead.
func (*UpdateProblemRequest) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateProblemRequest) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type DeleteProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemRequest) Reset() {
	*x = DeleteProblemRequest{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemRequest) ProtoMessage() {}

func (x *DeleteProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemRequest.ProtoReflect.Descriptor instead.
func (*DeleteProblemRequest) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProblemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProblemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemResponse) Reset() {
	*x = DeleteProblemResponse{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemResponse) ProtoMessage() {}

func (x *DeleteProblemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemResponse.ProtoReflect.Descriptor instead.
func (*DeleteProblemResponse) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{7}
}

// The request to judge a piece of code.
type SubmissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	SourceCode    string                 `protobuf:"bytes,2,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
	Language      Language               `protobuf:"varint,3,opt,name=language,proto3,enum=judge_service.Language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionRequest) Reset() {
	*x = SubmissionRequest{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest) ProtoMessage() {}

func (x *SubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmissionRequest) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{8}
}

func (x *SubmissionRequest) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *SubmissionRequest) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

func (x *SubmissionRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

type JudgeStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*JudgeStreamResponse_CompilationUpdate
	//	*JudgeStreamResponse_TestCaseUpdate
	//	*JudgeStreamResponse_FinalVerdict
	Event         isJudgeStreamResponse_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JudgeStreamResponse) Reset() {
	*x = JudgeStreamResponse{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JudgeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeStreamResponse) ProtoMessage() {}

func (x *JudgeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeStreamResponse.ProtoReflect.Descriptor instead.
func (*JudgeStreamResponse) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{9}
}

func (x *JudgeStreamResponse) GetEvent() isJudgeStreamResponse_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *JudgeStreamResponse) GetCompilationUpdate() *CompilationUpdate {
	if x != nil {
		if x, ok := x.Event.(*JudgeStreamResponse_CompilationUpdate); ok {
			return x.CompilationUpdate
		}
	}
	return nil
}

func (x *JudgeStreamResponse) GetTestCaseUpdate() *TestCaseUpdate {
	if x != nil {
		if x, ok := x.Event.(*JudgeStreamResponse_TestCaseUpdate); ok {
			return x.TestCaseUpdate
		}
	}
	return nil
}

func (x *JudgeStreamResponse) GetFinalVerdict() *FinalVerdict {
	if x != nil {
		if x, ok := x.Event.(*JudgeStreamResponse_FinalVerdict); ok {
			return x.FinalVerdict
		}
	}
	return nil
}

type isJudgeStreamResponse_Event interface {
	isJudgeStreamResponse_Event()
}

type JudgeStreamResponse_CompilationUpdate struct {
	// Sent first to indicate compilation status.
	CompilationUpdate *CompilationUpdate `protobuf:"bytes,1,opt,name=compilation_update,json=compilationUpdate,proto3,oneof"`
}

type JudgeStreamResponse_TestCaseUpdate struct {
	// Sent for each test case as it completes.
	TestCaseUpdate *TestCaseUpdate `protobuf:"bytes,2,opt,name=test_case_update,json=testCaseUpdate,proto3,oneof"`
}

type JudgeStreamResponse_FinalVerdict struct {
	// The final message in the stream, containing the overall verdict.
	FinalVerdict *FinalVerdict `protobuf:"bytes,3,opt,name=final_verdict,json=finalVerdict,proto3,oneof"`
}

func (*JudgeStreamResponse_CompilationUpdate) isJudgeStreamResponse_Event() {}

func (*JudgeStreamResponse_TestCaseUpdate) isJudgeStreamResponse_Event() {}

func (*JudgeStreamResponse_FinalVerdict) isJudgeStreamResponse_Event() {}

// Represents the result of the compilation phase.
type CompilationUpdate struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Status        CompilationUpdate_Status `protobuf:"varint,1,opt,name=status,proto3,enum=judge_service.CompilationUpdate_Status" json:"status,omitempty"`
	Output        string                   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompilationUpdate) Reset() {
	*x = CompilationUpdate{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationUpdate) ProtoMessage() {}

func (x *CompilationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationUpdate.ProtoReflect.Descriptor instead.
func (*CompilationUpdate) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{10}
}

func (x *CompilationUpdate) GetStatus() CompilationUpdate_Status {
	if x != nil {
		return x.Status
	}
	return CompilationUpdate_STATUS_UNSPECIFIED
}

func (x *CompilationUpdate) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

// Represents the result of a single test case.
type TestCaseUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TestCaseNumber  int32                  `protobuf:"varint,1,opt,name=test_case_number,json=testCaseNumber,proto3" json:"test_case_number,omitempty"`
	Status          VerdictStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=judge_service.VerdictStatus" json:"status,omitempty"`
	ExecutionTimeMs int64                  `protobuf:"varint,3,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	MemoryUsageKb   int64                  `protobuf:"varint,4,opt,name=memory_usage_kb,json=memoryUsageKb,proto3" json:"memory_usage_kb,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestCaseUpdate) Reset() {
	*x = TestCaseUpdate{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseUpdate) ProtoMessage() {}

func (x *TestCaseUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseUpdate.ProtoReflect.Descriptor instead.
func (*TestCaseUpdate) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{11}
}

func (x *TestCaseUpdate) GetTestCaseNumber() int32 {
	if x != nil {
		return x.TestCaseNumber
	}
	return 0
}

func (x *TestCaseUpdate) GetStatus() VerdictStatus {
	if x != nil {
		return x.Status
	}
	return VerdictStatus_VERDICT_UNSPECIFIED
}

func (x *TestCaseUpdate) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *TestCaseUpdate) GetMemoryUsageKb() int64 {
	if x != nil {
		return x.MemoryUsageKb
	}
	return 0
}

// The final verdict for the entire submission.
type FinalVerdict struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        VerdictStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=judge_service.VerdictStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalVerdict) Reset() {
	*x = FinalVerdict{}
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalVerdict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalVerdict) ProtoMessage() {}

func (x *FinalVerdict) ProtoReflect() protoreflect.Message {
	mi := &file_judge_service_protos_judge_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalVerdict.ProtoReflect.Descriptor instead.
func (*FinalVerdict) Descriptor() ([]byte, []int) {
	return file_judge_service_protos_judge_service_proto_rawDescGZIP(), []int{12}
}

func (x *FinalVerdict) GetStatus() VerdictStatus {
	if x != nil {
		return x.Status
	}
	return VerdictStatus_VERDICT_UNSPECIFIED
}

func (x *FinalVerdict) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_judge_service_protos_judge_service_proto protoreflect.FileDescriptor

const file_judge_service_protos_judge_service_proto_rawDesc = "" +
	"\n" +
	"(judge_service_protos/judge_service.proto\x12\rjudge_service\"\xe4\x02\n" +
	"\aProblem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\\\n" +
	"\x12language_harnesses\x18\x04 \x03(\v2-.judge_service.Problem.LanguageHarnessesEntryR\x11languageHarnesses\x125\n" +
	"\x06limits\x18\x05 \x01(\v2\x1d.judge_service.ResourceLimitsR\x06limits\x126\n" +
	"\n" +
	"test_cases\x18\x06 \x03(\v2\x17.judge_service.TestCaseR\ttestCases\x1aD\n" +
	"\x16LanguageHarnessesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x0eResourceLimits\x12\"\n" +
	"\rtime_limit_ms\x18\x01 \x01(\x05R\vtimeLimitMs\x12&\n" +
	"\x0fmemory_limit_mb\x18\x02 \x01(\x05R\rmemoryLimitMb\"f\n" +
	"\bTestCase\x12\x14\n" +
	"\x05input\x18\x01 \x01(\tR\x05input\x12'\n" +
	"\x0fexpected_output\x18\x02 \x01(\tR\x0eexpectedOutput\x12\x1b\n" +
	"\tis_hidden\x18\x03 \x01(\bR\bisHidden\"\xee\x02\n" +
	"\x14CreateProblemRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12i\n" +
	"\x12language_harnesses\x18\x03 \x03(\v2:.judge_service.CreateProblemRequest.LanguageHarnessesEntryR\x11languageHarnesses\x125\n" +
	"\x06limits\x18\x04 \x01(\v2\x1d.judge_service.ResourceLimitsR\x06limits\x126\n" +
	"\n" +
	"test_cases\x18\x05 \x03(\v2\x17.judge_service.TestCaseR\ttestCases\x1aD\n" +
	"\x16LanguageHarnessesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"#\n" +
	"\x11GetProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"H\n" +
	"\x14UpdateProblemRequest\x120\n" +
	"\aproblem\x18\x01 \x01(\v2\x16.judge_service.ProblemR\aproblem\"&\n" +
	"\x14DeleteProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x17\n" +
	"\x15DeleteProblemResponse\"\x88\x01\n" +
	"\x11SubmissionRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x1f\n" +
	"\vsource_code\x18\x02 \x01(\tR\n" +
	"sourceCode\x123\n" +
	"\blanguage\x18\x03 \x01(\x0e2\x17.judge_service.LanguageR\blanguage\"\x80\x02\n" +
	"\x13JudgeStreamResponse\x12Q\n" +
	"\x12compilation_update\x18\x01 \x01(\v2 .judge_service.CompilationUpdateH\x00R\x11compilationUpdate\x12I\n" +
	"\x10test_case_update\x18\x02 \x01(\v2\x1d.judge_service.TestCaseUpdateH\x00R\x0etestCaseUpdate\x12B\n" +
	"\rfinal_verdict\x18\x03 \x01(\v2\x1b.judge_service.FinalVerdictH\x00R\ffinalVerdictB\a\n" +
	"\x05event\"\xc3\x01\n" +
	"\x11CompilationUpdate\x12?\n" +
	"\x06status\x18\x01 \x01(\x0e2'.judge_service.CompilationUpdate.StatusR\x06status\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\"U\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\r\n" +
	"\tCOMPILING\x10\x02\x12\v\n" +
	"\aSUCCESS\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\"\xc4\x01\n" +
	"\x0eTestCaseUpdate\x12(\n" +
	"\x10test_case_number\x18\x01 \x01(\x05R\x0etestCaseNumber\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.judge_service.VerdictStatusR\x06status\x12*\n" +
	"\x11execution_time_ms\x18\x03 \x01(\x03R\x0fexecutionTimeMs\x12&\n" +
	"\x0fmemory_usage_kb\x18\x04 \x01(\x03R\rmemoryUsageKb\"^\n" +
	"\fFinalVerdict\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.judge_service.VerdictStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*I\n" +
	"\bLanguage\x12\x18\n" +
	"\x14LANGUAGE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06PYTHON\x10\x01\x12\a\n" +
	"\x03CPP\x10\x02\x12\x0e\n" +
	"\n" +
	"JAVASCRIPT\x10\x03*\xba\x01\n" +
	"\rVerdictStatus\x12\x17\n" +
	"\x13VERDICT_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bACCEPTED\x10\x01\x12\x10\n" +
	"\fWRONG_ANSWER\x10\x02\x12\x17\n" +
	"\x13TIME_LIMIT_EXCEEDED\x10\x03\x12\x19\n" +
	"\x15MEMORY_LIMIT_EXCEEDED\x10\x04\x12\x11\n" +
	"\rRUNTIME_ERROR\x10\x05\x12\x15\n" +
	"\x11COMPILATION_ERROR\x10\x06\x12\x12\n" +
	"\x0eINTERNAL_ERROR\x10\a2\xa9\x03\n" +
	"\fJudgeService\x12L\n" +
	"\rCreateProblem\x12#.judge_service.CreateProblemRequest\x1a\x16.judge_service.Problem\x12F\n" +
	"\n" +
	"GetProblem\x12 .judge_service.GetProblemRequest\x1a\x16.judge_service.Problem\x12L\n" +
	"\rUpdateProblem\x12#.judge_service.UpdateProblemRequest\x1a\x16.judge_service.Problem\x12Z\n" +
	"\rDeleteProblem\x12#.judge_service.DeleteProblemRequest\x1a$.judge_service.DeleteProblemResponse\x12Y\n" +
	"\x0fJudgeSubmission\x12 .judge_service.SubmissionRequest\x1a\".judge_service.JudgeStreamResponse0\x01B\x10Z\x0e/judge_serviceb\x06proto3"

var (
	file_judge_service_protos_judge_service_proto_rawDescOnce sync.Once
	file_judge_service_protos_judge_service_proto_rawDescData []byte
)

func file_judge_service_protos_judge_service_proto_rawDescGZIP() []byte {
	file_judge_service_protos_judge_service_proto_rawDescOnce.Do(func() {
		file_judge_service_protos_judge_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_judge_service_protos_judge_service_proto_rawDesc), len(file_judge_service_protos_judge_service_proto_rawDesc)))
	})
	return file_judge_service_protos_judge_service_proto_rawDescData
}

var file_judge_service_protos_judge_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_judge_service_protos_judge_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_judge_service_protos_judge_service_proto_goTypes = []any{
	(Language)(0),                 // 0: judge_service.Language
	(VerdictStatus)(0),            // 1: judge_service.VerdictStatus
	(CompilationUpdate_Status)(0), // 2: judge_service.CompilationUpdate.Status
	(*Problem)(nil),               // 3: judge_service.Problem
	(*ResourceLimits)(nil),        // 4: judge_service.ResourceLimits
	(*TestCase)(nil),              // 5: judge_service.TestCase
	(*CreateProblemRequest)(nil),  // 6: judge_service.CreateProblemRequest
	(*GetProblemRequest)(nil),     // 7: judge_service.GetProblemRequest
	(*UpdateProblemRequest)(nil),  // 8: judge_service.UpdateProblemRequest
	(*DeleteProblemRequest)(nil),  // 9: judge_service.DeleteProblemRequest
	(*DeleteProblemResponse)(nil), // 10: judge_service.DeleteProblemResponse
	(*SubmissionRequest)(nil),     // 11: judge_service.SubmissionRequest
	(*JudgeStreamResponse)(nil),   // 12: judge_service.JudgeStreamResponse
	(*CompilationUpdate)(nil),     // 13: judge_service.CompilationUpdate
	(*TestCaseUpdate)(nil),        // 14: judge_service.TestCaseUpdate
	(*FinalVerdict)(nil),          // 15: judge_service.FinalVerdict
	nil,                           // 16: judge_service.Problem.LanguageHarnessesEntry
	nil,                           // 17: judge_service.CreateProblemRequest.LanguageHarnessesEntry
}
var file_judge_service_protos_judge_service_proto_depIdxs = []int32{
	16, // 0: judge_service.Problem.language_harnesses:type_name -> judge_service.Problem.LanguageHarnessesEntry
	4,  // 1: judge_service.Problem.limits:type_name -> judge_service.ResourceLimits
	5,  // 2: judge_service.Problem.test_cases:type_name -> judge_service.TestCase
	17, // 3: judge_service.CreateProblemRequest.language_harnesses:type_name -> judge_service.CreateProblemRequest.LanguageHarnessesEntry
	4,  // 4: judge_service.CreateProblemRequest.limits:type_name -> judge_service.ResourceLimits
	5,  // 5: judge_service.CreateProblemRequest.test_cases:type_name -> judge_service.TestCase
	3,  // 6: judge_service.UpdateProblemRequest.problem:type_name -> judge_service.Problem
	0,  // 7: judge_service.SubmissionRequest.language:type_name -> judge_service.Language
	13, // 8: judge_service.JudgeStreamResponse.compilation_update:type_name -> judge_service.CompilationUpdate
	14, // 9: judge_service.JudgeStreamResponse.test_case_update:type_name -> judge_service.TestCaseUpdate
	15, // 10: judge_service.JudgeStreamResponse.final_verdict:type_name -> judge_service.FinalVerdict
	2,  // 11: judge_service.CompilationUpdate.status:type_name -> judge_service.CompilationUpdate.Status
	1,  // 12: judge_service.TestCaseUpdate.status:type_name -> judge_service.VerdictStatus
	1,  // 13: judge_service.FinalVerdict.status:type_name -> judge_service.VerdictStatus
	6,  // 14: judge_service.JudgeService.CreateProblem:input_type -> judge_service.CreateProblemRequest
	7,  // 15: judge_service.JudgeService.GetProblem:input_type -> judge_service.GetProblemRequest
	8,  // 16: judge_service.JudgeService.UpdateProblem:input_type -> judge_service.UpdateProblemRequest
	9,  // 17: judge_service.JudgeService.DeleteProblem:input_type -> judge_service.DeleteProblemRequest
	11, // 18: judge_service.JudgeService.JudgeSubmission:input_type -> judge_service.SubmissionRequest
	3,  // 19: judge_service.JudgeService.CreateProblem:output_type -> judge_service.Problem
	3,  // 20: judge_service.JudgeService.GetProblem:output_type -> judge_service.Problem
	3,  // 21: judge_service.JudgeService.UpdateProblem:output_type -> judge_service.Problem
	10, // 22: judge_service.JudgeService.DeleteProblem:output_type -> judge_service.DeleteProblemResponse
	12, // 23: judge_service.JudgeService.JudgeSubmission:output_type -> judge_service.JudgeStreamResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_judge_service_protos_judge_service_proto_init() }
func file_judge_service_protos_judge_service_proto_init() {
	if File_judge_service_protos_judge_service_proto != nil {
		return
	}
	file_judge_service_protos_judge_service_proto_msgTypes[9].OneofWrappers = []any{
		(*JudgeStreamResponse_CompilationUpdate)(nil),
		(*JudgeStreamResponse_TestCaseUpdate)(nil),
		(*JudgeStreamResponse_FinalVerdict)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_judge_service_protos_judge_service_proto_rawDesc), len(file_judge_service_protos_judge_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_judge_service_protos_judge_service_proto_goTypes,
		DependencyIndexes: file_judge_service_protos_judge_service_proto_depIdxs,
		EnumInfos:         file_judge_service_protos_judge_service_proto_enumTypes,
		MessageInfos:      file_judge_service_protos_judge_service_proto_msgTypes,
	}.Build()
	File_judge_service_protos_judge_service_proto = out.File
	file_judge_service_protos_judge_service_proto_goTypes = nil
	file_judge_service_protos_judge_service_proto_depIdxs = nil
}
